{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-emilia-core-src-templates-project-query-tsx","path":"/angry-cloud","result":{"data":{"images":{"nodes":[{"name":"angry1","childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#483838","images":{"fallback":{"src":"/portfolio.github.io/static/f736c84950fdc2579c3f4b826bcbbc0e/fe55a/angry1.png","srcSet":"/portfolio.github.io/static/f736c84950fdc2579c3f4b826bcbbc0e/f0b38/angry1.png 254w,\n/portfolio.github.io/static/f736c84950fdc2579c3f4b826bcbbc0e/bd9cb/angry1.png 508w,\n/portfolio.github.io/static/f736c84950fdc2579c3f4b826bcbbc0e/fe55a/angry1.png 1016w","sizes":"(min-width: 1016px) 1016px, 100vw"},"sources":[{"srcSet":"/portfolio.github.io/static/f736c84950fdc2579c3f4b826bcbbc0e/8eba9/angry1.webp 254w,\n/portfolio.github.io/static/f736c84950fdc2579c3f4b826bcbbc0e/e431c/angry1.webp 508w,\n/portfolio.github.io/static/f736c84950fdc2579c3f4b826bcbbc0e/13974/angry1.webp 1016w","type":"image/webp","sizes":"(min-width: 1016px) 1016px, 100vw"}]},"width":1600,"height":1864.5669291338584}}},{"name":"angry2","childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#180808","images":{"fallback":{"src":"/portfolio.github.io/static/8360e21a61ada11427e594630041bc26/b07b8/angry2.png","srcSet":"/portfolio.github.io/static/8360e21a61ada11427e594630041bc26/b74c5/angry2.png 400w,\n/portfolio.github.io/static/8360e21a61ada11427e594630041bc26/9030e/angry2.png 800w,\n/portfolio.github.io/static/8360e21a61ada11427e594630041bc26/b07b8/angry2.png 1600w","sizes":"(min-width: 1600px) 1600px, 100vw"},"sources":[{"srcSet":"/portfolio.github.io/static/8360e21a61ada11427e594630041bc26/93a7e/angry2.webp 400w,\n/portfolio.github.io/static/8360e21a61ada11427e594630041bc26/07873/angry2.webp 800w,\n/portfolio.github.io/static/8360e21a61ada11427e594630041bc26/dff1b/angry2.webp 1600w","type":"image/webp","sizes":"(min-width: 1600px) 1600px, 100vw"}]},"width":1600,"height":846}}},{"name":"angry3","childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#180808","images":{"fallback":{"src":"/portfolio.github.io/static/75a68b001dafb3dbb06077c87dfed513/44f96/angry3.png","srcSet":"/portfolio.github.io/static/75a68b001dafb3dbb06077c87dfed513/70332/angry3.png 400w,\n/portfolio.github.io/static/75a68b001dafb3dbb06077c87dfed513/90a2e/angry3.png 800w,\n/portfolio.github.io/static/75a68b001dafb3dbb06077c87dfed513/44f96/angry3.png 1600w","sizes":"(min-width: 1600px) 1600px, 100vw"},"sources":[{"srcSet":"/portfolio.github.io/static/75a68b001dafb3dbb06077c87dfed513/e463e/angry3.webp 400w,\n/portfolio.github.io/static/75a68b001dafb3dbb06077c87dfed513/cad62/angry3.webp 800w,\n/portfolio.github.io/static/75a68b001dafb3dbb06077c87dfed513/31ce5/angry3.webp 1600w","type":"image/webp","sizes":"(min-width: 1600px) 1600px, 100vw"}]},"width":1600,"height":866}}}]},"project":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"cover\": \"./angry1.png\",\n  \"date\": \"2021-09-11\",\n  \"title\": \"AngryCloud\",\n  \"areas\": [\"Group Project\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"https://angry-cloud.herokuapp.com/\",\n    \"title\": \"AngryCloud Live Link\"\n  }, \"Live Link\")), mdx(\"h2\", null, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"https://github.com/pstory721/soundCloudClone\",\n    \"title\": \"Github Repo Link\"\n  }, \"Repo Link\")), mdx(\"p\", null, \"My group and I cloned SoundCloud using Python, React.js, Flask, and a theme of\\nangry music. To render an api that persists throughout the app to play song\\nfiles, We had to create a context in the state to constantly add, and take\\naway songs from the player itself based on which song/playlist you chose to\\nlisten to. Using AWS we created a file upload system so users can create\\ntheir own songs and playlists with their unique album art. We had to build a\\nfull route and multiple flask files and a full api route to react / redux to\\nrender the newly made songs. To Create a seamless experience when creating,\\nediting, or deleting a comment we used Redux state to automatically listen\\nfor those changes to dynamically render them.\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Live Link Repo Link My group and I cloned SoundCloud using Python, React.js, Flask, and a theme of\nangry music. To render an api thatâ€¦","date":"11.09.2021","slug":"/angry-cloud","title":"AngryCloud","areas":["Group Project"],"cover":{"childImageSharp":{"resize":{"src":"/static/f736c84950fdc2579c3f4b826bcbbc0e/f9ff4/angry1.png"}}}}},"pageContext":{"slug":"/angry-cloud","absolutePathRegex":"/^/home/sam/aa-stuff/new-portfolio/new-work/porty/content/projects/emilia/","prev":null,"next":{"slug":"/pet-overflow","parent":{"fileAbsolutePath":"/home/sam/aa-stuff/new-portfolio/new-work/porty/content/projects/jodie/index.mdx"},"title":"PetOverflow","cover":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/portfolio.github.io/static/946c5b29376be042907bd205e7eda6a8/d3228/pet1.png","srcSet":"/portfolio.github.io/static/946c5b29376be042907bd205e7eda6a8/860f7/pet1.png 193w,\n/portfolio.github.io/static/946c5b29376be042907bd205e7eda6a8/9554a/pet1.png 385w,\n/portfolio.github.io/static/946c5b29376be042907bd205e7eda6a8/d3228/pet1.png 770w","sizes":"(min-width: 770px) 770px, 100vw"},"sources":[{"srcSet":"/portfolio.github.io/static/946c5b29376be042907bd205e7eda6a8/16cbe/pet1.webp 193w,\n/portfolio.github.io/static/946c5b29376be042907bd205e7eda6a8/39b38/pet1.webp 385w,\n/portfolio.github.io/static/946c5b29376be042907bd205e7eda6a8/1e281/pet1.webp 770w","type":"image/webp","sizes":"(min-width: 770px) 770px, 100vw"}]},"width":770,"height":433}}},"defer":false},"formatString":"DD.MM.YYYY"}},"staticQueryHashes":["1181966677","2744905544","318001574","468821756"]}